<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3975bb98-2325-4b9f-868b-6cced40e6cb8" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.firebaserc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/database.rules.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/email.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/firebase.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/firestore.indexes.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/firestore.rules" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/functions.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/functions/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/functions/package-lock.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/functions/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/functions/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/functions/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/init.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/index.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rollup.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/App.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Auth.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Interface.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package.json" />
        <option value="TypeScript JSX File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2EtPcLNrCCCZAIrwa3ioIy53ic4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "js.last.introduce.type": "CONST",
    "last_opened_file_path": "C:/Users/led/IdeaProjects/email/email.iml",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "ts.external.directory.path": "C:\\Users\\led\\IdeaProjects\\email\\node_modules\\typescript\\lib"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\led\IdeaProjects\email" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\led\IdeaProjects\email\functions" />
    </key>
  </component>
  <component name="RunManager" selected="npm.watch">
    <configuration name="build" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/functions/package.json" />
      <command value="run" />
      <scripts>
        <script value="build" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="emulate" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="emulate" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="watch" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="watch" />
      </scripts>
      <node-interpreter value="project" />
      <envs>
        <env name="BUILD" value="development" />
      </envs>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="npm.build" />
      <item itemvalue="npm.emulate" />
      <item itemvalue="npm.watch" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="npm.watch" />
        <item itemvalue="npm.emulate" />
        <item itemvalue="npm.build" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3975bb98-2325-4b9f-868b-6cced40e6cb8" name="Changes" comment="" />
      <created>1663408238119</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663408238119</updated>
      <workItem from="1663408276172" duration="3029000" />
      <workItem from="1663411996265" duration="31070000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>